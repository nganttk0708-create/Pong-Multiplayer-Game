const socket = io();
let roomJoined = false;

// =================== GIAO DI·ªÜN ===================
document.addEventListener("DOMContentLoaded", () => {
  const container = document.createElement("div");
  container.style.textAlign = "center";
  container.style.marginTop = "40px";

  const info = document.createElement("div");
  const createBtn = document.createElement("button");
  const joinBtn = document.createElement("button");
  const input = document.createElement("input");

  createBtn.innerText = "üéÆ T·∫°o ph√≤ng m·ªõi";
  joinBtn.innerText = "üîë Tham gia ph√≤ng";
  input.placeholder = "Nh·∫≠p m√£ ph√≤ng";

  createBtn.style.margin = "5px";
  joinBtn.style.margin = "5px";
  input.style.margin = "5px";

  container.appendChild(info);
  container.appendChild(createBtn);
  container.appendChild(document.createElement("br"));
  container.appendChild(input);
  container.appendChild(joinBtn);
  document.body.prepend(container);

  createBtn.onclick = () => socket.emit("createRoom");
  joinBtn.onclick = () => {
    const code = input.value.trim().toUpperCase();
    if (code) socket.emit("joinRoom", code);
  };

  socket.on("roomCreated", (code) => {
    info.innerHTML = `<b>Ph√≤ng c·ªßa b·∫°n: ${code}</b><br>Ch·ªù ng∆∞·ªùi kh√°c nh·∫≠p m√£ ƒë·ªÉ v√†o`;
  });

  socket.on("startGame", ({ roomCode }) => {
    info.innerHTML = `<b>Ph√≤ng ${roomCode}: Tr·∫≠n ƒë·∫•u b·∫Øt ƒë·∫ßu!</b>`;
    startGame(); // B·∫Øt ƒë·∫ßu game khi ƒë·ªß 2 ng∆∞·ªùi
    roomJoined = true;
  });

  socket.on("roomError", (msg) => {
    info.innerHTML = `<span style="color:red">${msg}</span>`;
  });

  socket.on("playerLeft", (msg) => {
    info.innerHTML = `<span style="color:red">${msg}</span>`;
    roomJoined = false;
  });
});

// =================== GAME LOGIC ===================
function startGame() {
  // Gi·∫£m t·ªëc ƒë·ªô b√≥ng l·∫°i
  ballSpeedX = 2.5;
  ballSpeedY = 2.5;
  // G·ªçi l·∫°i h√†m gameLoop() ho·∫∑c ph·∫ßn kh·ªüi t·∫°o c·ªßa b·∫°n ·ªü ƒë√¢y
}
